{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\CrapM\\\\Documents\\\\php\\\\ActokidsWebsite2021\\\\screens\\\\ProgramList.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ShowPrograms from \"../components/ListComponents/ShowPrograms\";\nimport FilterButton from \"../components/FilterButton\";\nimport loadProgramInformation from \"../hooks/loadProgramInformation\";\nimport loadTaxonomyInformation from \"../hooks/loadTaxonomyInformation\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ProgramDetails from \"../screens/ProgramDetails\";\nimport ActivityList from \"../screens/ActivityList\";\nimport Map from \"../screens/Map\";\nimport FilterPage from \"../screens/FilterPage\";\nimport FilterAccessOptions from \"../components/filterOptions/FilterAccessOptions\";\nimport FilterAgesGrades from \"../components/filterOptions/FilterAgesGrades\";\nimport FilterCostsAndTravel from \"../components/filterOptions/FilterCostsAndTravel\";\nimport FilterIndividualSports from \"../components/filterOptions/FilterIndividualSports\";\nimport FilterIndoorPrograms from \"../components/filterOptions/FilterIndoorPrograms\";\nimport FilterLanguageOptions from \"../components/filterOptions/FilterLanguageOptions\";\nimport FilterOutdoorPrograms from \"../components/filterOptions/FilterOutdoorPrograms\";\nimport FilterTeamSports from \"../components/filterOptions/FilterTeamSports\";\nimport Colors from \"../constants/Colors\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport IncomingFilter from \"../types\";\nvar BottomTab = createBottomTabNavigator();\nexport default function ProgramList() {\n  var _this = this;\n\n  var colorScheme = useColorScheme();\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: \"Programs\",\n    tabBarOptions: {\n      activeTintColor: Colors[colorScheme].tint\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Programs\",\n    component: ProgramListNavigator,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color;\n        return React.createElement(TabBarIcon, {\n          name: \"md-rocket\",\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Activities\",\n    component: ActivityListNavigator,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(TabBarIcon, {\n          name: \"md-american-football\",\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Map\",\n    component: MapNavigator,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(TabBarIcon, {\n          name: \"md-map\",\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction ProgramComponents(_ref4) {\n  var navigation = _ref4.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      programs = _useState2[0],\n      setPrograms = _useState2[1];\n\n  useEffect(function () {\n    IncomingFilter.IncomingFilterActivties = [];\n    IncomingFilter.IncomingFilterTaxonomy = [];\n    var incomingPrograms = loadProgramInformation().then(function (result) {\n      setPrograms(result);\n    });\n    var incomingFilter = loadTaxonomyInformation().then(function (result) {\n      IncomingFilter.IncomingFilterActivties = result.Activities;\n      IncomingFilter.IncomingFilterTaxonomy = result.Taxonomy;\n    });\n  }, []);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, React.createElement(ShowPrograms, {\n    programs: programs,\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction TabBarIcon(props) {\n  return React.createElement(Ionicons, _extends({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }\n  }));\n}\n\nvar ProgramListStack = createStackNavigator();\n\nfunction ProgramListNavigator() {\n  var _this2 = this;\n\n  return React.createElement(ProgramListStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, React.createElement(ProgramListStack.Screen, {\n    name: \"ProgramListScreen\",\n    component: ProgramComponents,\n    options: {\n      headerTitle: 'Program List',\n      headerRight: function headerRight() {\n        return React.createElement(FilterButton, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 31\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), React.createElement(ProgramListStack.Screen, {\n    name: \"ProgramDetailsScreen\",\n    component: ProgramDetails,\n    options: {\n      headerTitle: 'Program Details'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }), React.createElement(ProgramListStack.Screen, {\n    name: \"ProgramFilterScreen\",\n    component: FilterPage,\n    options: {\n      headerTitle: 'Filter'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }), React.createElement(ProgramListStack.Screen, {\n    name: \"FilterAccessOptions\",\n    component: FilterAccessOptions,\n    options: {\n      headerTitle: 'Accessibility Options'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), React.createElement(ProgramListStack.Screen, {\n    name: \"FilterAgesGrades\",\n    component: FilterAgesGrades,\n    options: {\n      headerTitle: 'Ages and Grades'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), React.createElement(ProgramListStack.Screen, {\n    name: \"FilterCostsAndTravel\",\n    component: FilterCostsAndTravel,\n    options: {\n      headerTitle: 'Costs and Travel'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }), React.createElement(ProgramListStack.Screen, {\n    name: \"FilterIndividualSports\",\n    component: FilterIndividualSports,\n    options: {\n      headerTitle: 'Individual Sports'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), React.createElement(ProgramListStack.Screen, {\n    name: \"FilterIndoorPrograms\",\n    component: FilterIndoorPrograms,\n    options: {\n      headerTitle: 'Indoor Programs'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), React.createElement(ProgramListStack.Screen, {\n    name: \"FilterLanguageOptions\",\n    component: FilterLanguageOptions,\n    options: {\n      headerTitle: 'Language Options'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }), React.createElement(ProgramListStack.Screen, {\n    name: \"FilterOutdoorPrograms\",\n    component: FilterOutdoorPrograms,\n    options: {\n      headerTitle: 'Outdoors Programs'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }), React.createElement(ProgramListStack.Screen, {\n    name: \"FilterTeamSports\",\n    component: FilterTeamSports,\n    options: {\n      headerTitle: 'Team Sports'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar ActivityListStack = createStackNavigator();\n\nfunction ActivityListNavigator() {\n  return React.createElement(ActivityListStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }, React.createElement(ActivityListStack.Screen, {\n    name: \"ActivityListScreen\",\n    component: ActivityList,\n    options: {\n      headerTitle: 'Activity List'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar MapStack = createStackNavigator();\n\nfunction MapNavigator() {\n  return React.createElement(MapStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, React.createElement(MapStack.Screen, {\n    name: \"MapScreen\",\n    component: Map,\n    options: {\n      headerTitle: 'Map'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/CrapM/Documents/php/ActokidsWebsite2021/screens/ProgramList.tsx"],"names":["React","useState","useEffect","ShowPrograms","FilterButton","loadProgramInformation","loadTaxonomyInformation","useColorScheme","ProgramDetails","ActivityList","Map","FilterPage","FilterAccessOptions","FilterAgesGrades","FilterCostsAndTravel","FilterIndividualSports","FilterIndoorPrograms","FilterLanguageOptions","FilterOutdoorPrograms","FilterTeamSports","Colors","Ionicons","createBottomTabNavigator","createStackNavigator","IncomingFilter","BottomTab","ProgramList","colorScheme","activeTintColor","tint","ProgramListNavigator","tabBarIcon","color","ActivityListNavigator","MapNavigator","ProgramComponents","navigation","programs","setPrograms","IncomingFilterActivties","IncomingFilterTaxonomy","incomingPrograms","then","result","incomingFilter","Activities","Taxonomy","TabBarIcon","props","marginBottom","ProgramListStack","headerTitle","headerRight","ActivityListStack","MapStack"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View} from 'react-native';\r\n\r\nimport ShowPrograms from '../components/ListComponents/ShowPrograms';\r\nimport FilterButton from '../components/FilterButton';\r\n\r\nimport loadProgramInformation from '../hooks/loadProgramInformation';\r\nimport loadTaxonomyInformation from '../hooks/loadTaxonomyInformation';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nimport ProgramDetails from '../screens/ProgramDetails';\r\nimport ActivityList from '../screens/ActivityList';\r\nimport Map from '../screens/Map';\r\n\r\nimport FilterPage from '../screens/FilterPage';\r\nimport FilterAccessOptions from '../components/filterOptions/FilterAccessOptions';\r\nimport FilterAgesGrades from '../components/filterOptions/FilterAgesGrades';\r\nimport FilterCostsAndTravel from '../components/filterOptions/FilterCostsAndTravel';\r\nimport FilterIndividualSports from '../components/filterOptions/FilterIndividualSports';\r\nimport FilterIndoorPrograms from '../components/filterOptions/FilterIndoorPrograms';\r\nimport FilterLanguageOptions from '../components/filterOptions/FilterLanguageOptions';\r\nimport FilterOutdoorPrograms from '../components/filterOptions/FilterOutdoorPrograms';\r\nimport FilterTeamSports from '../components/filterOptions/FilterTeamSports';\r\n\r\n\r\nimport Colors from '../constants/Colors';\r\n\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport { BottomTabParamList, ProgramParamList, ActivityParamList, MapParamList } from '../types';\r\nimport IncomingFilter from '../types'\r\n\r\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>();\r\n\r\n\r\nexport default function ProgramList() {\r\n  const colorScheme = useColorScheme();\r\n\r\n\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"Programs\"\r\n      tabBarOptions={{ activeTintColor: Colors[colorScheme].tint }}>\r\n      <BottomTab.Screen\r\n        name=\"Programs\"\r\n        component={ProgramListNavigator}\r\n        options={{\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"md-rocket\" color={color} />,\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Activities\"\r\n        component={ActivityListNavigator}\r\n        options={{\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"md-american-football\" color={color} />,\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Map\"\r\n        component={MapNavigator}\r\n        options={{\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"md-map\" color={color} />,\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\nfunction ProgramComponents({ navigation }) {\r\n    const [programs, setPrograms] = useState<Array<Array<any>>>([]);\r\n\r\n    useEffect(() => {\r\n      IncomingFilter.IncomingFilterActivties = []\r\n      IncomingFilter.IncomingFilterTaxonomy = []\r\n      const incomingPrograms = loadProgramInformation().then(function(result)\r\n          {\r\n              setPrograms(result);\r\n          })\r\n      const incomingFilter = loadTaxonomyInformation().then(function(result)\r\n      {\r\n          IncomingFilter.IncomingFilterActivties = result.Activities;\r\n          IncomingFilter.IncomingFilterTaxonomy = result.Taxonomy;\r\n      })\r\n      }, [])\r\n\r\n    //console.log(navigation);\r\n\r\n    //console.log(Object.keys(programs[0]));\r\n    //console.log(programs[0].Program_Name);\r\n    return(\r\n        <View>\r\n            <ShowPrograms programs={programs} navigation={navigation}/>\r\n        </View>\r\n    );\r\n  }\r\n\r\n\r\n  // You can explore the built-in icon families and icons on the web at:\r\n// https://icons.expo.fyi/\r\nfunction TabBarIcon(props: { name: string; color: string }) {\r\n  return <Ionicons size={30} style={{ marginBottom: -3 }} {...props} />;\r\n}\r\n\r\nconst ProgramListStack = createStackNavigator<ProgramParamList>();\r\n\r\nfunction ProgramListNavigator() {\r\n  return (\r\n    <ProgramListStack.Navigator>\r\n      <ProgramListStack.Screen\r\n        name=\"ProgramListScreen\"\r\n        component={ProgramComponents}\r\n        options={{ \r\n          headerTitle: 'Program List',\r\n          headerRight: () => (<FilterButton />)\r\n      }}/>\r\n      <ProgramListStack.Screen\r\n        name=\"ProgramDetailsScreen\"\r\n        component={ProgramDetails}\r\n        options={{ headerTitle: 'Program Details' }}\r\n      />\r\n      <ProgramListStack.Screen\r\n        name=\"ProgramFilterScreen\"\r\n        component={FilterPage}\r\n        options={{ headerTitle: 'Filter' }}\r\n      />   \r\n      <ProgramListStack.Screen\r\n        name=\"FilterAccessOptions\"\r\n        component={FilterAccessOptions}\r\n        options={{ headerTitle: 'Accessibility Options' }}\r\n      />   \r\n      <ProgramListStack.Screen\r\n        name=\"FilterAgesGrades\"\r\n        component={FilterAgesGrades}\r\n        options={{ headerTitle: 'Ages and Grades' }}\r\n      />   \r\n      <ProgramListStack.Screen\r\n        name=\"FilterCostsAndTravel\"\r\n        component={FilterCostsAndTravel}\r\n        options={{ headerTitle: 'Costs and Travel' }}\r\n      />   \r\n      <ProgramListStack.Screen\r\n        name=\"FilterIndividualSports\"\r\n        component={FilterIndividualSports}\r\n        options={{ headerTitle: 'Individual Sports' }}\r\n      />   \r\n      <ProgramListStack.Screen\r\n        name=\"FilterIndoorPrograms\"\r\n        component={FilterIndoorPrograms}\r\n        options={{ headerTitle: 'Indoor Programs' }}\r\n      />   \r\n      <ProgramListStack.Screen\r\n        name=\"FilterLanguageOptions\"\r\n        component={FilterLanguageOptions}\r\n        options={{ headerTitle: 'Language Options' }}\r\n      />   \r\n      <ProgramListStack.Screen\r\n        name=\"FilterOutdoorPrograms\"\r\n        component={FilterOutdoorPrograms}\r\n        options={{ headerTitle: 'Outdoors Programs' }}\r\n      />   \r\n      <ProgramListStack.Screen\r\n        name=\"FilterTeamSports\"\r\n        component={FilterTeamSports}\r\n        options={{ headerTitle: 'Team Sports' }}\r\n      />   \r\n      \r\n    </ProgramListStack.Navigator>\r\n  );\r\n}\r\n\r\nconst ActivityListStack = createStackNavigator<ActivityParamList>();\r\n\r\nfunction ActivityListNavigator() {\r\n  return (\r\n    <ActivityListStack.Navigator>\r\n      <ActivityListStack.Screen\r\n        name=\"ActivityListScreen\"\r\n        component={ActivityList}\r\n        options={{ headerTitle: 'Activity List' }}\r\n      />\r\n    </ActivityListStack.Navigator>\r\n  );\r\n}\r\n\r\nconst MapStack = createStackNavigator<MapParamList>();\r\n\r\nfunction MapNavigator() {\r\n  return (\r\n    <MapStack.Navigator>\r\n      <MapStack.Screen\r\n        name=\"MapScreen\"\r\n        component={Map}\r\n        options={{ headerTitle: 'Map' }}\r\n      />\r\n    </MapStack.Navigator>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}