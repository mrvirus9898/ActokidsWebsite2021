{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CrapM\\\\Documents\\\\php\\\\ActokidsWebsite2021\\\\screens\\\\FilterPage.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport IncomingFilter from \"../types\";\nimport FilterRootCards from \"../components/filterOptions/FilterRootCards\";\nexport default function FilterPage() {\n  if (IncomingFilter.IncomingFilterActivties.length == 0) {\n    return null;\n  } else {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, React.createElement(FilterRootCards, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["C:/Users/CrapM/Documents/php/ActokidsWebsite2021/screens/FilterPage.tsx"],"names":["React","IncomingFilter","FilterRootCards","FilterPage","IncomingFilterActivties","length"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;;AAMA,OAAOC,cAAP;AAKA,OAAOC,eAAP;AAEA,eAAe,SAASC,UAAT,GAAsB;AAGjC,MAAGF,cAAc,CAACG,uBAAf,CAAuCC,MAAvC,IAAiD,CAApD,EAAsD;AAClD,WAAO,IAAP;AACH,GAFD,MAEK;AAED,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;AA2BJ","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  ScrollView\r\n} from 'react-native';\r\n\r\nimport IncomingFilter from '../types'\r\n\r\nimport CheckBoxList from '../components/CheckBoxList';\r\n\r\n\r\nimport FilterRootCards from '../components/filterOptions/FilterRootCards';\r\n\r\nexport default function FilterPage() {\r\n\r\n    //Need to check as the load function is still loading\r\n    if(IncomingFilter.IncomingFilterActivties.length == 0){\r\n        return(null);        \r\n    }else{\r\n        //console.log(taxonomy.Activities);\r\n        return(\r\n            <View>\r\n                <FilterRootCards />\r\n            </View>\r\n        );\r\n    }\r\n\r\n/*\r\n                <ScrollView>\r\n                    <CheckBoxList title={IncomingFilter.IncomingFilterActivties}/>\r\n                    <CheckBoxList title={IncomingFilter.IncomingFilterTaxonomy}/>\r\n                </ScrollView>\r\n                */\r\n\r\n    /*if(taxonomy.length == 0){\r\n        \r\n        const incomingData = loadTaxonomyInformation().then(function(result)\r\n        {\r\n            setTaxonomy(result);\r\n        })\r\n        return(null);        \r\n    }else{\r\n        //console.log(taxonomy.Activities);\r\n        return(\r\n            <View>\r\n                <ScrollView>\r\n                    <CheckBoxList title={taxonomy.Activities}/>\r\n                    <CheckBoxList title={taxonomy.Taxonomy}/>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }*/\r\n}\r\n\r\n/*\r\n             <Text>Filter List Top Component</Text>\r\n<CheckBoxList title={taxonomy.Activities}/>\r\n\r\n<View>\r\n            <ScrollView>\r\n                <Text style={styles.headTitle}>\r\n                    Activity Types\r\n                </Text>\r\n                {ShowActCheckBox()}\r\n                <Text style={styles.textLine}>\r\n                    _________________________________________________________\r\n                </Text>\r\n                <Text style={styles.headTitle}>\r\n                    Disability Types\r\n                </Text>\r\n                {ShowDisCheckBox()}\r\n            </ScrollView>\r\n        </View>\r\n\r\n        */\r\n       /*\r\n           const [taxonomy, setTaxonomy] = useState<Array<Array<any>>>([]);\r\n\r\n    useEffect(() => {\r\n        const incomingData = loadTaxonomyInformation().then(function(result)\r\n        {\r\n            setTaxonomy(result);\r\n        })\r\n    }, [])*/\r\n\r\n"]},"metadata":{},"sourceType":"module"}