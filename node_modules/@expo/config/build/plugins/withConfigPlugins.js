"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
<<<<<<< HEAD
const Serialize_1 = require("../Serialize");
const withStaticPlugin_1 = require("./withStaticPlugin");
/**
 * Resolves a list of plugins.
 *
 * @param config
 * @param projectRoot
 */
const withPlugins = (config, plugins) => {
    return plugins.reduce((prev, plugin) => {
        return withStaticPlugin_1.withStaticPlugin(prev, { plugin });
    }, config);
};
=======
const config_plugins_1 = require("@expo/config-plugins");
const Serialize_1 = require("../Serialize");
>>>>>>> 64e5a878e639053ebd41b0338fb1e758bb115dad
/**
 * Resolves static plugins array as config plugin functions.
 *
 * @param config
 * @param projectRoot
 */
exports.withConfigPlugins = config => {
    var _a;
    // @ts-ignore: plugins not on config type yet -- TODO
    if (!Array.isArray(config.plugins) || !((_a = config.plugins) === null || _a === void 0 ? void 0 : _a.length)) {
        return config;
    }
    // Resolve and evaluate plugins
    // @ts-ignore: TODO: add plugins to the config schema
<<<<<<< HEAD
    config = withPlugins(config, config.plugins);
=======
    config = config_plugins_1.withPlugins(config, config.plugins);
>>>>>>> 64e5a878e639053ebd41b0338fb1e758bb115dad
    // plugins aren't serialized by default, serialize the plugins after resolving them.
    return Serialize_1.serializeAfterStaticPlugins(config);
};
//# sourceMappingURL=withConfigPlugins.js.map