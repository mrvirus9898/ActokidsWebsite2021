'use strict';

<<<<<<< HEAD
var GetIntrinsic = require('../GetIntrinsic');
var callBound = require('../helpers/callBound');
=======
var GetIntrinsic = require('get-intrinsic');
var callBound = require('call-bind/callBound');
>>>>>>> 64e5a878e639053ebd41b0338fb1e758bb115dad

var $TypeError = GetIntrinsic('%TypeError%');
var $bigIntValueOf = callBound('BigInt.prototype.valueOf', true);

var Type = require('./Type');

<<<<<<< HEAD
// https://tc39.es/ecma262/2020/#sec-thisbigintvalue
=======
// https://262.ecma-international.org/11.0/#sec-thisbigintvalue
>>>>>>> 64e5a878e639053ebd41b0338fb1e758bb115dad

module.exports = function thisBigIntValue(value) {
	var type = Type(value);
	if (type === 'BigInt') {
		return value;
	}
	if (!$bigIntValueOf) {
		throw new $TypeError('BigInt is not supported');
	}
	return $bigIntValueOf(value);
};
